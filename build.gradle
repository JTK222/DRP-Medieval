buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "com.wynprice.cursemaven:CurseMaven:1.2.3"
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'idea'
    id 'maven-publish'
}

//The Plugin block only works for plugins in the gradle maven
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.wynprice.cursemaven'


def MOD_VERSION = System.getenv('RELEASE_VERSION')?: '0';

version = "${MC_VERSION}-${MOD_VERSION}"
group = 'net.dark_roleplay'
archivesBaseName = 'drpmedieval'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

configurations {
    apiCompile.extendsFrom(compile)
}

sourceSets {
    generated
    api
    main {
        compileClasspath += sourceSets.api.output
        runtimeClasspath += sourceSets.api.output
        compileClasspath += sourceSets.generated.output
        runtimeClasspath += sourceSets.generated.output
    }
    test {
        compileClasspath += sourceSets.api.output
        runtimeClasspath += sourceSets.api.output
        compileClasspath += sourceSets.generated.output
        runtimeClasspath += sourceSets.generated.output
    }
}

minecraft {
    mappings channel: 'snapshot', version: '20190929-1.14.3'
    runs {
        client {
            workingDirectory project.file('runs/client')
            property 'forge.logging.console.level', 'debug'

            environment 'MOD_CLASSES',
                    "archivesBaseName%%${project.file('out/production/resources').canonicalPath};" +
                            "archivesBaseName%%${project.file('out/production/classes').canonicalPath};" +
                            "archivesBaseName%%${project.file('out/api/resources').canonicalPath};"+
                            "archivesBaseName%%${project.file('out/api/classes').canonicalPath};"+
                            "archivesBaseName%%${project.file('out/generated/resources').canonicalPath}"
        }

        server {
            workingDirectory project.file('runs/server')
            property 'forge.logging.console.level', 'debug'

            environment 'MOD_CLASSES',
                    "archivesBaseName%%${project.file('out/production/resources').canonicalPath};" +
                            "archivesBaseName%%${project.file('out/production/classes').canonicalPath};" +
                            "archivesBaseName%%${project.file('out/api/resources').canonicalPath};"+
                            "archivesBaseName%%${project.file('out/api/classes').canonicalPath};"+
                            "archivesBaseName%%${project.file('out/generated/resources').canonicalPath}"
        }

        data {
            workingDirectory project.file('run/data_gen')
            args '--mod', 'drpmedieval', '--all', '--output', file('src/generated/resources/')

            environment 'MOD_CLASSES',
                    "archivesBaseName%%${project.file('out/production/resources').canonicalPath};" +
                            "archivesBaseName%%${project.file('out/production/classes').canonicalPath};" +
                            "archivesBaseName%%${project.file('out/api/resources').canonicalPath};"+
                            "archivesBaseName%%${project.file('out/api/classes').canonicalPath};"+
                            "archivesBaseName%%${project.file('out/generated/resources').canonicalPath}"        }
    }
}

repositories {
	maven {url = "https://dark-roleplay.net/files/maven/"}
	maven{url = "https://minecraft.curseforge.com/api/maven/"}
	
    mavenLocal()
}

dependencies {
    minecraft([
            group   : 'net.minecraftforge',
            name    : 'forge',
            version : "${MC_VERSION}-${FORGE_VERSION}"

    ])

	compile(fg.deobf("net.dark_roleplay:marg:1.14.4-0.2.7"))
	compile(fg.deobf("net.dark_roleplay:drplibrary:1.14.2-0.1.0"))
	//compile(fg.deobf("net.dark_roleplay:modelz:1.14.4-0.1.3"))
	//runtime(fg.deobf(curse.resolve("biomes-o-plenty", 2801408)))
}

apply from: 'https://dark-roleplay.net/files/gradle_helpers/1.14.2/contained_deps.gradle'

jar {
    from sourceSets.main.output.classesDirs
    from sourceSets.main.output.resourcesDir
    from sourceSets.api.output.resourcesDir
    from sourceSets.api.output.classesDirs
    from sourceSets.generated.output.classesDirs
    from sourceSets.generated.output.resourcesDir

    manifest {
        attributes([
            "Specification-Title": "drpmedieval",
            "Specification-Vendor": "Dark Roleplay",
            "Specification-Version": "0.1",
            "Implementation-Title": "Dark Roleplay Medieval",
            "Implementation-Version": "${version}",
            "Implementation-Vendor": "Dark Roleplay",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    from sourceSets.api.allSource
    from sourceSets.generated.allSource
}

task apiJar(type: Jar) {
    classifier = 'api'
    from sourceSets.api.output
}

artifacts {
    archives apiJar
    archives sourcesJar
    archives javadocJar
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        expand 'version': project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

idea {
    module {
        for (String excludeDirName in ["run", "out", "runs", ".github", ".idea", "gradle"]) {
            File excludeDir = new File(projectDir, excludeDirName)
            excludeDirs.add(excludeDir)
        }
    }
}

curseforge {
    apiKey = System.getenv('CURSE_API_KEY') // This should really be in a gradle.properties file
    project {
        id = '238326'
        changelog = file('changelog.txt') // A file can also be set using: changelog = file('changelog.txt')
        releaseType = 'alpha'
        mainArtifact(jar) {
            displayName = "DRP Medieval - ${MC_VERSION} - v${MOD_VERSION} Alpha"
        }
    }
    options {
        debug = true
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.archivesBaseName
            version = project.version

            artifact reobfArtifact
            artifact apiJar
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url System.getenv('MVN_REPO')
            credentials {
                username System.getenv('MVN_USER')
                password System.getenv('MVN_PASSWORD')
            }
        }
    }
}